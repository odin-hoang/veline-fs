{
    "hints": {
        "op_into_asset(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "allow_owner_campaign(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_campaign(byte[],byte[],uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "mint_asset(address,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "check_eligible(address,uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "owner_campaign(uint64)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "creator()address": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuY2FtcGFpZ24uY29udHJhY3QuQ2FtcGFpZ24uY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "HASH_LENGTH": {
                    "type": "uint64",
                    "key": "HASH_LENGTH"
                },
                "asa": {
                    "type": "uint64",
                    "key": "asa"
                },
                "total_campaign": {
                    "type": "uint64",
                    "key": "total_campaign"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Campaign",
        "methods": [
            {
                "name": "op_into_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "allow_owner_campaign",
                "args": [
                    {
                        "type": "address",
                        "name": "owner_campaign"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "add_campaign",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "proof"
                    },
                    {
                        "type": "byte[]",
                        "name": "root"
                    },
                    {
                        "type": "uint64",
                        "name": "expired_at"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "mint_asset",
                "args": [
                    {
                        "type": "address",
                        "name": "addr"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "uint64",
                        "name": "campaign_id"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "check_eligible",
                "args": [
                    {
                        "type": "address",
                        "name": "addr"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "uint64",
                        "name": "campaign_id"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "owner_campaign",
                "args": [
                    {
                        "type": "uint64",
                        "name": "campaign_id"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "creator",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}