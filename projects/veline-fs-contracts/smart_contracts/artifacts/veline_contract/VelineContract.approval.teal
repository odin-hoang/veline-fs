#pragma version 10

smart_contracts.veline_contract.contract.VelineContract.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.veline_contract.contract.VelineContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@6
    method "hello(string)string"
    method "add(uint64,uint64)uint64"
    txna ApplicationArgs 0
    match __puya_arc4_router___hello_route@2 __puya_arc4_router___add_route@3
    int 0
    retsub

__puya_arc4_router___hello_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    extract 2 0
    callsub hello
    dup
    len
    itob
    extract 6 2
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___add_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    callsub add
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@6:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@10
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@10:
    int 0
    retsub


// smart_contracts.veline_contract.contract.VelineContract.hello(name: bytes) -> bytes:
hello:
    proto 1 1
    byte "Hello, "
    frame_dig -1
    concat
    retsub


// smart_contracts.veline_contract.contract.VelineContract.add(a: uint64, b: uint64) -> uint64:
add:
    proto 2 1
    frame_dig -2
    frame_dig -1
    +
    retsub
