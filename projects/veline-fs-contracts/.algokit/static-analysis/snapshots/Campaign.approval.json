{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 38,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "27: int 0",
              "28: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 8 -> 25 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "30: __puya_arc4_router___op_into_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "36: txna ApplicationArgs 1",
              "37: btoi",
              "38: txnas Assets",
              "39: callsub op_into_asset"
            ],
            [
              "153: op_into_asset:",
              "154: proto 1 0",
              "155: int 0",
              "156: byte \"asa\"",
              "157: app_global_get_ex",
              "158: assert",
              "159: !",
              "160: assert",
              "161: frame_dig -1",
              "162: assert",
              "163: txn Sender",
              "164: global CreatorAddress",
              "165: ==",
              "166: assert",
              "167: byte \"asa\"",
              "168: frame_dig -1",
              "169: app_global_put",
              "170: retsub"
            ],
            [
              "40: int 1",
              "41: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 10 -> 26 -> 28 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "43: __puya_arc4_router___allow_owner_campaign_route@3:",
              "44: txn OnCompletion",
              "45: !",
              "46: assert",
              "47: txn ApplicationID",
              "48: assert",
              "49: txna ApplicationArgs 1",
              "50: callsub allow_owner_campaign"
            ],
            [
              "174: allow_owner_campaign:",
              "175: proto 1 0",
              "176: callsub only_creator"
            ],
            [
              "192: only_creator:",
              "193: proto 0 0",
              "194: global CreatorAddress",
              "195: txn Sender",
              "196: ==",
              "197: assert",
              "198: retsub"
            ],
            [
              "177: byte \"valid_owner_campaign\"",
              "178: frame_dig -1",
              "179: concat",
              "180: dup",
              "181: box_len",
              "182: bury 1",
              "183: !",
              "184: assert",
              "185: int 1",
              "186: itob",
              "187: box_put",
              "188: retsub"
            ],
            [
              "51: int 1",
              "52: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 41 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "416: int 1",
              "417: b mint_asset_bool_merge@4"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 14 -> 39 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 54 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "572: int 0",
              "573: frame_bury 0",
              "574: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 16 -> 52 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 18 -> 58 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "108: __puya_arc4_router___owner_campaign_route@7:",
              "109: txn OnCompletion",
              "110: !",
              "111: assert",
              "112: txn ApplicationID",
              "113: assert",
              "114: txna ApplicationArgs 1",
              "115: btoi",
              "116: callsub owner_campaign"
            ],
            [
              "597: owner_campaign:",
              "598: proto 1 1",
              "599: frame_dig -1",
              "600: itob",
              "601: byte \"campaign\"",
              "602: swap",
              "603: concat",
              "604: box_get",
              "605: assert",
              "606: extract 4 32",
              "607: retsub"
            ],
            [
              "117: byte 0x151f7c75",
              "118: swap",
              "119: concat",
              "120: log",
              "121: int 1",
              "122: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 20 -> 59 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "124: __puya_arc4_router___creator_route@8:",
              "125: txn OnCompletion",
              "126: !",
              "127: assert",
              "128: txn ApplicationID",
              "129: assert",
              "130: callsub creator"
            ],
            [
              "611: creator:",
              "612: proto 0 1",
              "613: global CreatorAddress",
              "614: retsub"
            ],
            [
              "131: byte 0x151f7c75",
              "132: swap",
              "133: concat",
              "134: log",
              "135: int 1",
              "136: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 22 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "141: txn ApplicationID",
              "142: !",
              "143: assert",
              "144: int 1",
              "145: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 22 -> 24 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "147: __puya_arc4_router___after_if_else@15:",
              "148: int 0",
              "149: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "27: int 0",
              "28: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 25 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "30: __puya_arc4_router___op_into_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "36: txna ApplicationArgs 1",
              "37: btoi",
              "38: txnas Assets",
              "39: callsub op_into_asset"
            ],
            [
              "153: op_into_asset:",
              "154: proto 1 0",
              "155: int 0",
              "156: byte \"asa\"",
              "157: app_global_get_ex",
              "158: assert",
              "159: !",
              "160: assert",
              "161: frame_dig -1",
              "162: assert",
              "163: txn Sender",
              "164: global CreatorAddress",
              "165: ==",
              "166: assert",
              "167: byte \"asa\"",
              "168: frame_dig -1",
              "169: app_global_put",
              "170: retsub"
            ],
            [
              "40: int 1",
              "41: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 26 -> 28 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "43: __puya_arc4_router___allow_owner_campaign_route@3:",
              "44: txn OnCompletion",
              "45: !",
              "46: assert",
              "47: txn ApplicationID",
              "48: assert",
              "49: txna ApplicationArgs 1",
              "50: callsub allow_owner_campaign"
            ],
            [
              "174: allow_owner_campaign:",
              "175: proto 1 0",
              "176: callsub only_creator"
            ],
            [
              "192: only_creator:",
              "193: proto 0 0",
              "194: global CreatorAddress",
              "195: txn Sender",
              "196: ==",
              "197: assert",
              "198: retsub"
            ],
            [
              "177: byte \"valid_owner_campaign\"",
              "178: frame_dig -1",
              "179: concat",
              "180: dup",
              "181: box_len",
              "182: bury 1",
              "183: !",
              "184: assert",
              "185: int 1",
              "186: itob",
              "187: box_put",
              "188: retsub"
            ],
            [
              "51: int 1",
              "52: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 41 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "416: int 1",
              "417: b mint_asset_bool_merge@4"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 39 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 54 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "572: int 0",
              "573: frame_bury 0",
              "574: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 52 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "108: __puya_arc4_router___owner_campaign_route@7:",
              "109: txn OnCompletion",
              "110: !",
              "111: assert",
              "112: txn ApplicationID",
              "113: assert",
              "114: txna ApplicationArgs 1",
              "115: btoi",
              "116: callsub owner_campaign"
            ],
            [
              "597: owner_campaign:",
              "598: proto 1 1",
              "599: frame_dig -1",
              "600: itob",
              "601: byte \"campaign\"",
              "602: swap",
              "603: concat",
              "604: box_get",
              "605: assert",
              "606: extract 4 32",
              "607: retsub"
            ],
            [
              "117: byte 0x151f7c75",
              "118: swap",
              "119: concat",
              "120: log",
              "121: int 1",
              "122: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 20 -> 59 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "124: __puya_arc4_router___creator_route@8:",
              "125: txn OnCompletion",
              "126: !",
              "127: assert",
              "128: txn ApplicationID",
              "129: assert",
              "130: callsub creator"
            ],
            [
              "611: creator:",
              "612: proto 0 1",
              "613: global CreatorAddress",
              "614: retsub"
            ],
            [
              "131: byte 0x151f7c75",
              "132: swap",
              "133: concat",
              "134: log",
              "135: int 1",
              "136: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 22 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "141: txn ApplicationID",
              "142: !",
              "143: assert",
              "144: int 1",
              "145: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 22 -> 24 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "147: __puya_arc4_router___after_if_else@15:",
              "148: int 0",
              "149: retsub"
            ],
            [
              "10: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 38,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "27: int 0",
              "28: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 8 -> 25 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "30: __puya_arc4_router___op_into_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "36: txna ApplicationArgs 1",
              "37: btoi",
              "38: txnas Assets",
              "39: callsub op_into_asset"
            ],
            [
              "153: op_into_asset:",
              "154: proto 1 0",
              "155: int 0",
              "156: byte \"asa\"",
              "157: app_global_get_ex",
              "158: assert",
              "159: !",
              "160: assert",
              "161: frame_dig -1",
              "162: assert",
              "163: txn Sender",
              "164: global CreatorAddress",
              "165: ==",
              "166: assert",
              "167: byte \"asa\"",
              "168: frame_dig -1",
              "169: app_global_put",
              "170: retsub"
            ],
            [
              "40: int 1",
              "41: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 10 -> 26 -> 28 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "43: __puya_arc4_router___allow_owner_campaign_route@3:",
              "44: txn OnCompletion",
              "45: !",
              "46: assert",
              "47: txn ApplicationID",
              "48: assert",
              "49: txna ApplicationArgs 1",
              "50: callsub allow_owner_campaign"
            ],
            [
              "174: allow_owner_campaign:",
              "175: proto 1 0",
              "176: callsub only_creator"
            ],
            [
              "192: only_creator:",
              "193: proto 0 0",
              "194: global CreatorAddress",
              "195: txn Sender",
              "196: ==",
              "197: assert",
              "198: retsub"
            ],
            [
              "177: byte \"valid_owner_campaign\"",
              "178: frame_dig -1",
              "179: concat",
              "180: dup",
              "181: box_len",
              "182: bury 1",
              "183: !",
              "184: assert",
              "185: int 1",
              "186: itob",
              "187: box_put",
              "188: retsub"
            ],
            [
              "51: int 1",
              "52: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 41 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "416: int 1",
              "417: b mint_asset_bool_merge@4"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 14 -> 39 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 54 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "572: int 0",
              "573: frame_bury 0",
              "574: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 16 -> 52 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 18 -> 58 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "108: __puya_arc4_router___owner_campaign_route@7:",
              "109: txn OnCompletion",
              "110: !",
              "111: assert",
              "112: txn ApplicationID",
              "113: assert",
              "114: txna ApplicationArgs 1",
              "115: btoi",
              "116: callsub owner_campaign"
            ],
            [
              "597: owner_campaign:",
              "598: proto 1 1",
              "599: frame_dig -1",
              "600: itob",
              "601: byte \"campaign\"",
              "602: swap",
              "603: concat",
              "604: box_get",
              "605: assert",
              "606: extract 4 32",
              "607: retsub"
            ],
            [
              "117: byte 0x151f7c75",
              "118: swap",
              "119: concat",
              "120: log",
              "121: int 1",
              "122: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 6 -> 20 -> 59 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "124: __puya_arc4_router___creator_route@8:",
              "125: txn OnCompletion",
              "126: !",
              "127: assert",
              "128: txn ApplicationID",
              "129: assert",
              "130: callsub creator"
            ],
            [
              "611: creator:",
              "612: proto 0 1",
              "613: global CreatorAddress",
              "614: retsub"
            ],
            [
              "131: byte 0x151f7c75",
              "132: swap",
              "133: concat",
              "134: log",
              "135: int 1",
              "136: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 22 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "141: txn ApplicationID",
              "142: !",
              "143: assert",
              "144: int 1",
              "145: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 3 -> 5 -> 22 -> 24 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "618: __init__:",
              "619: proto 0 0",
              "620: byte \"HASH_LENGTH\"",
              "621: int 32",
              "622: app_global_put",
              "623: byte \"asa\"",
              "624: int 0",
              "625: app_global_put",
              "626: byte \"total_campaign\"",
              "627: int 0",
              "628: app_global_put",
              "629: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "147: __puya_arc4_router___after_if_else@15:",
              "148: int 0",
              "149: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "27: int 0",
              "28: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 25 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "30: __puya_arc4_router___op_into_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "36: txna ApplicationArgs 1",
              "37: btoi",
              "38: txnas Assets",
              "39: callsub op_into_asset"
            ],
            [
              "153: op_into_asset:",
              "154: proto 1 0",
              "155: int 0",
              "156: byte \"asa\"",
              "157: app_global_get_ex",
              "158: assert",
              "159: !",
              "160: assert",
              "161: frame_dig -1",
              "162: assert",
              "163: txn Sender",
              "164: global CreatorAddress",
              "165: ==",
              "166: assert",
              "167: byte \"asa\"",
              "168: frame_dig -1",
              "169: app_global_put",
              "170: retsub"
            ],
            [
              "40: int 1",
              "41: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 26 -> 28 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "43: __puya_arc4_router___allow_owner_campaign_route@3:",
              "44: txn OnCompletion",
              "45: !",
              "46: assert",
              "47: txn ApplicationID",
              "48: assert",
              "49: txna ApplicationArgs 1",
              "50: callsub allow_owner_campaign"
            ],
            [
              "174: allow_owner_campaign:",
              "175: proto 1 0",
              "176: callsub only_creator"
            ],
            [
              "192: only_creator:",
              "193: proto 0 0",
              "194: global CreatorAddress",
              "195: txn Sender",
              "196: ==",
              "197: assert",
              "198: retsub"
            ],
            [
              "177: byte \"valid_owner_campaign\"",
              "178: frame_dig -1",
              "179: concat",
              "180: dup",
              "181: box_len",
              "182: bury 1",
              "183: !",
              "184: assert",
              "185: int 1",
              "186: itob",
              "187: box_put",
              "188: retsub"
            ],
            [
              "51: int 1",
              "52: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 35 -> 37 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "336: frame_dig 0",
              "337: global CreatorAddress",
              "338: ==",
              "339: bz only_valid_owner_campaign_bool_false@3"
            ],
            [
              "345: only_valid_owner_campaign_bool_false@3:",
              "346: int 0"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 31 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "220: frame_dig 1",
              "221: itob",
              "222: byte 0x0001",
              "223: swap",
              "224: concat",
              "225: swap",
              "226: dup",
              "227: box_del",
              "228: pop",
              "229: swap",
              "230: box_put",
              "231: b add_campaign_after_if_else@3"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 29 -> 34 -> 36 -> 38 -> 30 -> 32 -> 33 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "54: __puya_arc4_router___add_campaign_route@4:",
              "55: txn OnCompletion",
              "56: !",
              "57: assert",
              "58: txn ApplicationID",
              "59: assert",
              "60: txna ApplicationArgs 1",
              "61: extract 2 0",
              "62: txna ApplicationArgs 2",
              "63: extract 2 0",
              "64: txna ApplicationArgs 3",
              "65: btoi",
              "66: callsub add_campaign"
            ],
            [
              "202: add_campaign:",
              "203: proto 3 0",
              "204: callsub only_valid_owner_campaign"
            ],
            [
              "327: only_valid_owner_campaign:",
              "328: proto 0 0",
              "329: txn Sender",
              "330: byte \"valid_owner_campaign\"",
              "331: txn Sender",
              "332: concat",
              "333: box_len",
              "334: bury 1",
              "335: bnz only_valid_owner_campaign_bool_true@2"
            ],
            [
              "341: only_valid_owner_campaign_bool_true@2:",
              "342: int 1",
              "343: b only_valid_owner_campaign_bool_merge@4"
            ],
            [
              "348: only_valid_owner_campaign_bool_merge@4:",
              "349: assert",
              "350: retsub"
            ],
            [
              "205: txn Sender",
              "206: dup",
              "207: int 0",
              "208: byte \"total_campaign\"",
              "209: app_global_get_ex",
              "210: swap",
              "211: cover 2",
              "212: assert",
              "213: byte \"campaign_id\"",
              "214: swap",
              "215: concat",
              "216: dup",
              "217: box_len",
              "218: bury 1",
              "219: bnz add_campaign_else_body@2"
            ],
            [
              "233: add_campaign_else_body@2:",
              "234: dup",
              "235: box_get",
              "236: assert",
              "237: extract 2 0",
              "238: frame_dig 1",
              "239: itob",
              "240: concat",
              "241: dup",
              "242: len",
              "243: int 8",
              "244: /",
              "245: itob",
              "246: extract 6 2",
              "247: swap",
              "248: concat",
              "249: dig 1",
              "250: box_del",
              "251: pop",
              "252: box_put"
            ],
            [
              "254: add_campaign_after_if_else@3:",
              "255: int 0",
              "256: byte \"total_campaign\"",
              "257: app_global_get_ex",
              "258: assert",
              "259: int 1",
              "260: +",
              "261: byte \"total_campaign\"",
              "262: swap",
              "263: app_global_put",
              "264: frame_dig -3",
              "265: len",
              "266: itob",
              "267: extract 6 2",
              "268: frame_dig -3",
              "269: concat",
              "270: frame_dig -2",
              "271: len",
              "272: itob",
              "273: extract 6 2",
              "274: frame_dig -2",
              "275: concat",
              "276: swap",
              "277: frame_dig -1",
              "278: itob",
              "279: swap",
              "280: dup",
              "281: len",
              "282: int 44",
              "283: +",
              "284: itob",
              "285: extract 6 2",
              "286: byte 0x002c",
              "287: dig 1",
              "288: concat",
              "289: frame_dig 0",
              "290: dup",
              "291: cover 6",
              "292: concat",
              "293: uncover 3",
              "294: concat",
              "295: dig 2",
              "296: concat",
              "297: dig 3",
              "298: concat",
              "299: frame_dig 1",
              "300: itob",
              "301: byte \"campaign\"",
              "302: dig 1",
              "303: concat",
              "304: dup",
              "305: box_del",
              "306: pop",
              "307: uncover 2",
              "308: box_put",
              "309: byte 0x002c",
              "310: concat",
              "311: swap",
              "312: concat",
              "313: uncover 3",
              "314: concat",
              "315: swap",
              "316: concat",
              "317: swap",
              "318: concat",
              "319: method AddCampaignEvent(uint64,byte[],byte[],address)",
              "320: swap",
              "321: concat",
              "322: log",
              "323: retsub"
            ],
            [
              "67: int 1",
              "68: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 41 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "416: int 1",
              "417: b mint_asset_bool_merge@4"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 39 -> 40 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "407: frame_dig 1",
              "408: dup",
              "409: len",
              "410: frame_dig 3",
              "411: swap",
              "412: substring3",
              "413: byte 0x0000",
              "414: !=",
              "415: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 39 -> 42 -> 43 -> 46 -> 44 -> 47 -> 48 -> 51 -> 45 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "70: __puya_arc4_router___mint_asset_route@5:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: txna ApplicationArgs 1",
              "77: txna ApplicationArgs 2",
              "78: btoi",
              "79: txna ApplicationArgs 3",
              "80: btoi",
              "81: callsub mint_asset"
            ],
            [
              "354: mint_asset:",
              "355: proto 3 0",
              "356: frame_dig -1",
              "357: itob",
              "358: dup",
              "359: byte \"campaign\"",
              "360: dig 1",
              "361: concat",
              "362: box_get",
              "363: swap",
              "364: dup",
              "365: cover 2",
              "366: cover 3",
              "367: assert",
              "368: global LatestTimestamp",
              "369: dig 1",
              "370: extract 36 8",
              "371: swap",
              "372: itob",
              "373: b<",
              "374: assert",
              "375: byte \"claimed\"",
              "376: uncover 2",
              "377: concat",
              "378: dup",
              "379: cover 2",
              "380: box_get",
              "381: assert",
              "382: frame_dig -3",
              "383: concat",
              "384: box_get",
              "385: swap",
              "386: btoi",
              "387: swap",
              "388: assert",
              "389: !",
              "390: assert",
              "391: dup",
              "392: int 0",
              "393: extract_uint16",
              "394: swap",
              "395: dup",
              "396: int 2",
              "397: extract_uint16",
              "398: dup",
              "399: cover 3",
              "400: swap",
              "401: cover 2",
              "402: substring3",
              "403: dup",
              "404: byte 0x0000",
              "405: !=",
              "406: bz mint_asset_bool_false@3"
            ],
            [
              "419: mint_asset_bool_false@3:",
              "420: int 0"
            ],
            [
              "422: mint_asset_bool_merge@4:",
              "423: assert",
              "424: frame_dig -2",
              "425: itob",
              "426: frame_dig -3",
              "427: dig 1",
              "428: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "429: frame_dig 1",
              "430: dup",
              "431: len",
              "432: frame_dig 3",
              "433: swap",
              "434: substring3",
              "435: frame_dig 4",
              "436: swap",
              "437: uncover 2",
              "438: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "439: assert",
              "440: frame_dig 2",
              "441: box_get",
              "442: assert",
              "443: frame_dig -3",
              "444: concat",
              "445: int 1",
              "446: itob",
              "447: box_put",
              "448: itxn_begin",
              "449: int 0",
              "450: byte \"asa\"",
              "451: app_global_get_ex",
              "452: assert",
              "453: txn Sender",
              "454: itxn_field AssetReceiver",
              "455: frame_dig -2",
              "456: itxn_field AssetAmount",
              "457: itxn_field XferAsset",
              "458: int axfer",
              "459: itxn_field TypeEnum",
              "460: int 0",
              "461: itxn_field Fee",
              "462: itxn_submit",
              "463: frame_dig -3",
              "464: swap",
              "465: concat",
              "466: frame_dig 0",
              "467: concat",
              "468: method MintEvent(address,uint64,uint64)",
              "469: swap",
              "470: concat",
              "471: log",
              "472: retsub"
            ],
            [
              "82: int 1",
              "83: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 54 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "572: int 0",
              "573: frame_bury 0",
              "574: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 52 -> 53 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "563: frame_dig 0",
              "564: dup",
              "565: len",
              "566: frame_dig 1",
              "567: swap",
              "568: substring3",
              "569: byte 0x0000",
              "570: ==",
              "571: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 52 -> 55 -> 46 -> 56 -> 47 -> 48 -> 51 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "85: __puya_arc4_router___check_eligible_route@6:",
              "86: txn OnCompletion",
              "87: !",
              "88: assert",
              "89: txn ApplicationID",
              "90: assert",
              "91: txna ApplicationArgs 1",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "94: txna ApplicationArgs 3",
              "95: btoi",
              "96: callsub check_eligible"
            ],
            [
              "535: check_eligible:",
              "536: proto 3 1",
              "537: frame_dig -1",
              "538: itob",
              "539: byte \"campaign\"",
              "540: swap",
              "541: concat",
              "542: box_get",
              "543: swap",
              "544: dup",
              "545: uncover 2",
              "546: assert",
              "547: dup",
              "548: int 0",
              "549: extract_uint16",
              "550: swap",
              "551: dup",
              "552: int 2",
              "553: extract_uint16",
              "554: dup",
              "555: cover 3",
              "556: swap",
              "557: cover 2",
              "558: substring3",
              "559: dup",
              "560: byte 0x0000",
              "561: ==",
              "562: bz check_eligible_after_if_else@3"
            ],
            [
              "576: check_eligible_after_if_else@3:",
              "577: frame_dig -2",
              "578: itob",
              "579: frame_dig -3",
              "580: swap",
              "581: callsub hash_pair"
            ],
            [
              "476: hash_pair:",
              "477: proto 2 1",
              "478: frame_dig -2",
              "479: frame_dig -1",
              "480: concat",
              "481: sha256",
              "482: retsub"
            ],
            [
              "582: frame_dig 0",
              "583: dup",
              "584: len",
              "585: frame_dig 1",
              "586: swap",
              "587: substring3",
              "588: frame_dig 2",
              "589: swap",
              "590: uncover 2",
              "591: callsub verify_asset"
            ],
            [
              "486: verify_asset:",
              "487: proto 3 1",
              "488: int 0",
              "489: byte \"HASH_LENGTH\"",
              "490: app_global_get_ex",
              "491: swap",
              "492: dup",
              "493: uncover 2",
              "494: assert",
              "495: frame_dig -3",
              "496: len",
              "497: swap",
              "498: assert",
              "499: int 0",
              "500: frame_dig -1"
            ],
            [
              "502: verify_asset_for_header@1:",
              "503: frame_dig 2",
              "504: frame_dig 1",
              "505: <",
              "506: bz verify_asset_after_for@4"
            ],
            [
              "526: verify_asset_after_for@4:",
              "527: frame_dig 3",
              "528: frame_dig -2",
              "529: ==",
              "530: frame_bury 0",
              "531: retsub"
            ],
            [
              "592: frame_bury 0",
              "593: retsub"
            ],
            [
              "97: byte 0x00",
              "98: int 0",
              "99: uncover 2",
              "100: setbit",
              "101: byte 0x151f7c75",
              "102: swap",
              "103: concat",
              "104: log",
              "105: int 1",
              "106: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "108: __puya_arc4_router___owner_campaign_route@7:",
              "109: txn OnCompletion",
              "110: !",
              "111: assert",
              "112: txn ApplicationID",
              "113: assert",
              "114: txna ApplicationArgs 1",
              "115: btoi",
              "116: callsub owner_campaign"
            ],
            [
              "597: owner_campaign:",
              "598: proto 1 1",
              "599: frame_dig -1",
              "600: itob",
              "601: byte \"campaign\"",
              "602: swap",
              "603: concat",
              "604: box_get",
              "605: assert",
              "606: extract 4 32",
              "607: retsub"
            ],
            [
              "117: byte 0x151f7c75",
              "118: swap",
              "119: concat",
              "120: log",
              "121: int 1",
              "122: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 20 -> 59 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "18: method op_into_asset(asset)void",
              "19: method allow_owner_campaign(address)void",
              "20: method add_campaign(byte[],byte[],uint64)void",
              "21: method mint_asset(address,uint64,uint64)void",
              "22: method check_eligible(address,uint64,uint64)bool",
              "23: method owner_campaign(uint64)address",
              "24: method creator()address",
              "25: txna ApplicationArgs 0",
              "26: match __puya_arc4_router___op_into_asset_route@2 __puya_arc4_router___allow_owner_campaign_route@3 __puya_arc4_router___add_campaign_route@4 __puya_arc4_router___mint_asset_route@5 __puya_arc4_router___check_eligible_route@6 __puya_arc4_router___owner_campaign_route@7 __puya_arc4_router___creator_route@8"
            ],
            [
              "124: __puya_arc4_router___creator_route@8:",
              "125: txn OnCompletion",
              "126: !",
              "127: assert",
              "128: txn ApplicationID",
              "129: assert",
              "130: callsub creator"
            ],
            [
              "611: creator:",
              "612: proto 0 1",
              "613: global CreatorAddress",
              "614: retsub"
            ],
            [
              "131: byte 0x151f7c75",
              "132: swap",
              "133: concat",
              "134: log",
              "135: int 1",
              "136: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 22 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "141: txn ApplicationID",
              "142: !",
              "143: assert",
              "144: int 1",
              "145: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 22 -> 24 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.campaign.contract.Campaign.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@11"
            ],
            [
              "138: __puya_arc4_router___bare_routing@11:",
              "139: txn OnCompletion",
              "140: bnz __puya_arc4_router___after_if_else@15"
            ],
            [
              "147: __puya_arc4_router___after_if_else@15:",
              "148: int 0",
              "149: retsub"
            ],
            [
              "10: return"
            ]
          ]
        }
      ]
    }
  ]
}