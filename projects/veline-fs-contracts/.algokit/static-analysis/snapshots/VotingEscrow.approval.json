{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 66,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "29: int 0",
              "30: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 8 -> 29 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "32: __puya_arc4_router___initialize_route@2:",
              "33: txn OnCompletion",
              "34: !",
              "35: assert",
              "36: txn ApplicationID",
              "37: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "40: txnas Assets",
              "41: callsub initialize"
            ],
            [
              "176: initialize:",
              "177: proto 1 0",
              "178: txn Sender",
              "179: global CreatorAddress",
              "180: ==",
              "181: assert",
              "182: int 0",
              "183: byte \"asa\"",
              "184: app_global_get_ex",
              "185: assert",
              "186: !",
              "187: assert",
              "188: byte \"asa\"",
              "189: frame_dig -1",
              "190: app_global_put",
              "191: retsub"
            ],
            [
              "42: int 1",
              "43: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 12 -> 41 -> 43 -> 42 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "68: __puya_arc4_router___claim_token_route@4:",
              "69: txn OnCompletion",
              "70: !",
              "71: assert",
              "72: txn ApplicationID",
              "73: assert",
              "74: callsub claim_token"
            ],
            [
              "468: claim_token:",
              "469: proto 0 0",
              "470: txn Sender",
              "471: byte \"voting_escrow_user\"",
              "472: dig 1",
              "473: concat",
              "474: dup",
              "475: box_len",
              "476: bury 1",
              "477: assert",
              "478: dup",
              "479: box_get",
              "480: assert",
              "481: extract 40 8",
              "482: btoi",
              "483: swap",
              "484: dup",
              "485: box_get",
              "486: assert",
              "487: extract 48 8",
              "488: btoi",
              "489: uncover 2",
              "490: swap",
              "491: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "492: pop",
              "493: dup",
              "494: box_get",
              "495: assert",
              "496: extract 32 8",
              "497: swap",
              "498: dup",
              "499: box_get",
              "500: assert",
              "501: extract 32 8",
              "502: byte 0x0000000000000000",
              "503: b>",
              "504: assert",
              "505: dig 1",
              "506: byte 0x0000000000000000",
              "507: b>",
              "508: assert",
              "509: int 0",
              "510: byte \"total_locked\"",
              "511: app_global_get_ex",
              "512: assert",
              "513: dig 2",
              "514: btoi",
              "515: dup",
              "516: cover 2",
              "517: >=",
              "518: assert",
              "519: int 0",
              "520: byte \"total_locked\"",
              "521: app_global_get_ex",
              "522: assert",
              "523: dig 1",
              "524: -",
              "525: byte \"total_locked\"",
              "526: swap",
              "527: app_global_put",
              "528: dig 1",
              "529: box_get",
              "530: assert",
              "531: byte 0x0000000000000000",
              "532: replace2 32",
              "533: dig 2",
              "534: swap",
              "535: box_put",
              "536: dig 1",
              "537: box_get",
              "538: assert",
              "539: byte 0x0000000000000000",
              "540: replace2 40",
              "541: dig 2",
              "542: swap",
              "543: box_put",
              "544: dig 1",
              "545: box_get",
              "546: assert",
              "547: byte 0x0000000000000000",
              "548: replace2 48",
              "549: dig 2",
              "550: swap",
              "551: box_put",
              "552: dig 1",
              "553: box_get",
              "554: assert",
              "555: byte 0x0000000000000000",
              "556: replace2 64",
              "557: uncover 2",
              "558: swap",
              "559: box_put",
              "560: itxn_begin",
              "561: int 0",
              "562: byte \"asa\"",
              "563: app_global_get_ex",
              "564: assert",
              "565: dig 3",
              "566: itxn_field AssetReceiver",
              "567: itxn_field XferAsset",
              "568: itxn_field AssetAmount",
              "569: int axfer",
              "570: itxn_field TypeEnum",
              "571: int 0",
              "572: itxn_field Fee",
              "573: itxn_submit",
              "574: concat",
              "575: method ClaimEvent(address,uint64)",
              "576: swap",
              "577: concat",
              "578: log",
              "579: retsub"
            ],
            [
              "75: int 1",
              "76: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 20 -> 60 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "112: __puya_arc4_router___users_locked_route@8:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub users_locked"
            ],
            [
              "850: users_locked:",
              "851: proto 0 1",
              "852: int 0",
              "853: byte \"user_locked\"",
              "854: app_global_get_ex",
              "855: assert",
              "856: retsub"
            ],
            [
              "119: byte 0x151f7c75",
              "120: swap",
              "121: concat",
              "122: log",
              "123: int 1",
              "124: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 22 -> 61 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "126: __puya_arc4_router___is_locked_ever_route@9:",
              "127: txn OnCompletion",
              "128: !",
              "129: assert",
              "130: txn ApplicationID",
              "131: assert",
              "132: txna ApplicationArgs 1",
              "133: callsub is_locked_ever"
            ],
            [
              "860: is_locked_ever:",
              "861: proto 1 1",
              "862: byte \"locked_user\"",
              "863: frame_dig -1",
              "864: concat",
              "865: box_get",
              "866: swap",
              "867: btoi",
              "868: swap",
              "869: assert",
              "870: retsub"
            ],
            [
              "134: byte 0x00",
              "135: int 0",
              "136: uncover 2",
              "137: setbit",
              "138: byte 0x151f7c75",
              "139: swap",
              "140: concat",
              "141: log",
              "142: int 1",
              "143: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 24 -> 62 -> 63 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "883: int 0",
              "884: swap",
              "885: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 24 -> 62 -> 64 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "887: balance_of_after_if_else@2:",
              "888: frame_dig 0",
              "889: box_get",
              "890: assert",
              "891: extract 56 8",
              "892: btoi",
              "893: swap",
              "894: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 26 -> 27 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "164: txn ApplicationID",
              "165: !",
              "166: assert",
              "167: int 1",
              "168: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 26 -> 28 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "170: __puya_arc4_router___after_if_else@17:",
              "171: int 0",
              "172: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "29: int 0",
              "30: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 29 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "32: __puya_arc4_router___initialize_route@2:",
              "33: txn OnCompletion",
              "34: !",
              "35: assert",
              "36: txn ApplicationID",
              "37: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "40: txnas Assets",
              "41: callsub initialize"
            ],
            [
              "176: initialize:",
              "177: proto 1 0",
              "178: txn Sender",
              "179: global CreatorAddress",
              "180: ==",
              "181: assert",
              "182: int 0",
              "183: byte \"asa\"",
              "184: app_global_get_ex",
              "185: assert",
              "186: !",
              "187: assert",
              "188: byte \"asa\"",
              "189: frame_dig -1",
              "190: app_global_put",
              "191: retsub"
            ],
            [
              "42: int 1",
              "43: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 41 -> 43 -> 42 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "68: __puya_arc4_router___claim_token_route@4:",
              "69: txn OnCompletion",
              "70: !",
              "71: assert",
              "72: txn ApplicationID",
              "73: assert",
              "74: callsub claim_token"
            ],
            [
              "468: claim_token:",
              "469: proto 0 0",
              "470: txn Sender",
              "471: byte \"voting_escrow_user\"",
              "472: dig 1",
              "473: concat",
              "474: dup",
              "475: box_len",
              "476: bury 1",
              "477: assert",
              "478: dup",
              "479: box_get",
              "480: assert",
              "481: extract 40 8",
              "482: btoi",
              "483: swap",
              "484: dup",
              "485: box_get",
              "486: assert",
              "487: extract 48 8",
              "488: btoi",
              "489: uncover 2",
              "490: swap",
              "491: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "492: pop",
              "493: dup",
              "494: box_get",
              "495: assert",
              "496: extract 32 8",
              "497: swap",
              "498: dup",
              "499: box_get",
              "500: assert",
              "501: extract 32 8",
              "502: byte 0x0000000000000000",
              "503: b>",
              "504: assert",
              "505: dig 1",
              "506: byte 0x0000000000000000",
              "507: b>",
              "508: assert",
              "509: int 0",
              "510: byte \"total_locked\"",
              "511: app_global_get_ex",
              "512: assert",
              "513: dig 2",
              "514: btoi",
              "515: dup",
              "516: cover 2",
              "517: >=",
              "518: assert",
              "519: int 0",
              "520: byte \"total_locked\"",
              "521: app_global_get_ex",
              "522: assert",
              "523: dig 1",
              "524: -",
              "525: byte \"total_locked\"",
              "526: swap",
              "527: app_global_put",
              "528: dig 1",
              "529: box_get",
              "530: assert",
              "531: byte 0x0000000000000000",
              "532: replace2 32",
              "533: dig 2",
              "534: swap",
              "535: box_put",
              "536: dig 1",
              "537: box_get",
              "538: assert",
              "539: byte 0x0000000000000000",
              "540: replace2 40",
              "541: dig 2",
              "542: swap",
              "543: box_put",
              "544: dig 1",
              "545: box_get",
              "546: assert",
              "547: byte 0x0000000000000000",
              "548: replace2 48",
              "549: dig 2",
              "550: swap",
              "551: box_put",
              "552: dig 1",
              "553: box_get",
              "554: assert",
              "555: byte 0x0000000000000000",
              "556: replace2 64",
              "557: uncover 2",
              "558: swap",
              "559: box_put",
              "560: itxn_begin",
              "561: int 0",
              "562: byte \"asa\"",
              "563: app_global_get_ex",
              "564: assert",
              "565: dig 3",
              "566: itxn_field AssetReceiver",
              "567: itxn_field XferAsset",
              "568: itxn_field AssetAmount",
              "569: int axfer",
              "570: itxn_field TypeEnum",
              "571: int 0",
              "572: itxn_field Fee",
              "573: itxn_submit",
              "574: concat",
              "575: method ClaimEvent(address,uint64)",
              "576: swap",
              "577: concat",
              "578: log",
              "579: retsub"
            ],
            [
              "75: int 1",
              "76: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 20 -> 60 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "112: __puya_arc4_router___users_locked_route@8:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub users_locked"
            ],
            [
              "850: users_locked:",
              "851: proto 0 1",
              "852: int 0",
              "853: byte \"user_locked\"",
              "854: app_global_get_ex",
              "855: assert",
              "856: retsub"
            ],
            [
              "119: byte 0x151f7c75",
              "120: swap",
              "121: concat",
              "122: log",
              "123: int 1",
              "124: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 22 -> 61 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "126: __puya_arc4_router___is_locked_ever_route@9:",
              "127: txn OnCompletion",
              "128: !",
              "129: assert",
              "130: txn ApplicationID",
              "131: assert",
              "132: txna ApplicationArgs 1",
              "133: callsub is_locked_ever"
            ],
            [
              "860: is_locked_ever:",
              "861: proto 1 1",
              "862: byte \"locked_user\"",
              "863: frame_dig -1",
              "864: concat",
              "865: box_get",
              "866: swap",
              "867: btoi",
              "868: swap",
              "869: assert",
              "870: retsub"
            ],
            [
              "134: byte 0x00",
              "135: int 0",
              "136: uncover 2",
              "137: setbit",
              "138: byte 0x151f7c75",
              "139: swap",
              "140: concat",
              "141: log",
              "142: int 1",
              "143: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 24 -> 62 -> 63 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "883: int 0",
              "884: swap",
              "885: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 24 -> 62 -> 64 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "887: balance_of_after_if_else@2:",
              "888: frame_dig 0",
              "889: box_get",
              "890: assert",
              "891: extract 56 8",
              "892: btoi",
              "893: swap",
              "894: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 26 -> 27 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "164: txn ApplicationID",
              "165: !",
              "166: assert",
              "167: int 1",
              "168: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 26 -> 28 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "170: __puya_arc4_router___after_if_else@17:",
              "171: int 0",
              "172: retsub"
            ],
            [
              "10: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 66,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "29: int 0",
              "30: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 8 -> 29 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "32: __puya_arc4_router___initialize_route@2:",
              "33: txn OnCompletion",
              "34: !",
              "35: assert",
              "36: txn ApplicationID",
              "37: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "40: txnas Assets",
              "41: callsub initialize"
            ],
            [
              "176: initialize:",
              "177: proto 1 0",
              "178: txn Sender",
              "179: global CreatorAddress",
              "180: ==",
              "181: assert",
              "182: int 0",
              "183: byte \"asa\"",
              "184: app_global_get_ex",
              "185: assert",
              "186: !",
              "187: assert",
              "188: byte \"asa\"",
              "189: frame_dig -1",
              "190: app_global_put",
              "191: retsub"
            ],
            [
              "42: int 1",
              "43: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 12 -> 41 -> 43 -> 42 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "68: __puya_arc4_router___claim_token_route@4:",
              "69: txn OnCompletion",
              "70: !",
              "71: assert",
              "72: txn ApplicationID",
              "73: assert",
              "74: callsub claim_token"
            ],
            [
              "468: claim_token:",
              "469: proto 0 0",
              "470: txn Sender",
              "471: byte \"voting_escrow_user\"",
              "472: dig 1",
              "473: concat",
              "474: dup",
              "475: box_len",
              "476: bury 1",
              "477: assert",
              "478: dup",
              "479: box_get",
              "480: assert",
              "481: extract 40 8",
              "482: btoi",
              "483: swap",
              "484: dup",
              "485: box_get",
              "486: assert",
              "487: extract 48 8",
              "488: btoi",
              "489: uncover 2",
              "490: swap",
              "491: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "492: pop",
              "493: dup",
              "494: box_get",
              "495: assert",
              "496: extract 32 8",
              "497: swap",
              "498: dup",
              "499: box_get",
              "500: assert",
              "501: extract 32 8",
              "502: byte 0x0000000000000000",
              "503: b>",
              "504: assert",
              "505: dig 1",
              "506: byte 0x0000000000000000",
              "507: b>",
              "508: assert",
              "509: int 0",
              "510: byte \"total_locked\"",
              "511: app_global_get_ex",
              "512: assert",
              "513: dig 2",
              "514: btoi",
              "515: dup",
              "516: cover 2",
              "517: >=",
              "518: assert",
              "519: int 0",
              "520: byte \"total_locked\"",
              "521: app_global_get_ex",
              "522: assert",
              "523: dig 1",
              "524: -",
              "525: byte \"total_locked\"",
              "526: swap",
              "527: app_global_put",
              "528: dig 1",
              "529: box_get",
              "530: assert",
              "531: byte 0x0000000000000000",
              "532: replace2 32",
              "533: dig 2",
              "534: swap",
              "535: box_put",
              "536: dig 1",
              "537: box_get",
              "538: assert",
              "539: byte 0x0000000000000000",
              "540: replace2 40",
              "541: dig 2",
              "542: swap",
              "543: box_put",
              "544: dig 1",
              "545: box_get",
              "546: assert",
              "547: byte 0x0000000000000000",
              "548: replace2 48",
              "549: dig 2",
              "550: swap",
              "551: box_put",
              "552: dig 1",
              "553: box_get",
              "554: assert",
              "555: byte 0x0000000000000000",
              "556: replace2 64",
              "557: uncover 2",
              "558: swap",
              "559: box_put",
              "560: itxn_begin",
              "561: int 0",
              "562: byte \"asa\"",
              "563: app_global_get_ex",
              "564: assert",
              "565: dig 3",
              "566: itxn_field AssetReceiver",
              "567: itxn_field XferAsset",
              "568: itxn_field AssetAmount",
              "569: int axfer",
              "570: itxn_field TypeEnum",
              "571: int 0",
              "572: itxn_field Fee",
              "573: itxn_submit",
              "574: concat",
              "575: method ClaimEvent(address,uint64)",
              "576: swap",
              "577: concat",
              "578: log",
              "579: retsub"
            ],
            [
              "75: int 1",
              "76: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 20 -> 60 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "112: __puya_arc4_router___users_locked_route@8:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub users_locked"
            ],
            [
              "850: users_locked:",
              "851: proto 0 1",
              "852: int 0",
              "853: byte \"user_locked\"",
              "854: app_global_get_ex",
              "855: assert",
              "856: retsub"
            ],
            [
              "119: byte 0x151f7c75",
              "120: swap",
              "121: concat",
              "122: log",
              "123: int 1",
              "124: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 22 -> 61 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "126: __puya_arc4_router___is_locked_ever_route@9:",
              "127: txn OnCompletion",
              "128: !",
              "129: assert",
              "130: txn ApplicationID",
              "131: assert",
              "132: txna ApplicationArgs 1",
              "133: callsub is_locked_ever"
            ],
            [
              "860: is_locked_ever:",
              "861: proto 1 1",
              "862: byte \"locked_user\"",
              "863: frame_dig -1",
              "864: concat",
              "865: box_get",
              "866: swap",
              "867: btoi",
              "868: swap",
              "869: assert",
              "870: retsub"
            ],
            [
              "134: byte 0x00",
              "135: int 0",
              "136: uncover 2",
              "137: setbit",
              "138: byte 0x151f7c75",
              "139: swap",
              "140: concat",
              "141: log",
              "142: int 1",
              "143: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 24 -> 62 -> 63 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "883: int 0",
              "884: swap",
              "885: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 6 -> 24 -> 62 -> 64 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "887: balance_of_after_if_else@2:",
              "888: frame_dig 0",
              "889: box_get",
              "890: assert",
              "891: extract 56 8",
              "892: btoi",
              "893: swap",
              "894: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 26 -> 27 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "164: txn ApplicationID",
              "165: !",
              "166: assert",
              "167: int 1",
              "168: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 65 -> 3 -> 5 -> 26 -> 28 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "898: __init__:",
              "899: proto 0 0",
              "900: byte \"total_locked\"",
              "901: int 0",
              "902: app_global_put",
              "903: byte \"total_vetoken\"",
              "904: int 0",
              "905: app_global_put",
              "906: byte \"total_user\"",
              "907: int 0",
              "908: app_global_put",
              "909: byte \"user_locked\"",
              "910: byte 0x0000",
              "911: app_global_put",
              "912: byte \"asa\"",
              "913: int 0",
              "914: app_global_put",
              "915: byte \"SECONDS_PER_YEAR\"",
              "916: int 31536000",
              "917: app_global_put",
              "918: byte \"MIN_LOCK_TIME_SECONDS\"",
              "919: int 604800",
              "920: app_global_put",
              "921: byte \"MAX_LOCK_TIME_SECONDS\"",
              "922: int 126144000",
              "923: app_global_put",
              "924: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "170: __puya_arc4_router___after_if_else@17:",
              "171: int 0",
              "172: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "29: int 0",
              "30: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 29 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "32: __puya_arc4_router___initialize_route@2:",
              "33: txn OnCompletion",
              "34: !",
              "35: assert",
              "36: txn ApplicationID",
              "37: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "40: txnas Assets",
              "41: callsub initialize"
            ],
            [
              "176: initialize:",
              "177: proto 1 0",
              "178: txn Sender",
              "179: global CreatorAddress",
              "180: ==",
              "181: assert",
              "182: int 0",
              "183: byte \"asa\"",
              "184: app_global_get_ex",
              "185: assert",
              "186: !",
              "187: assert",
              "188: byte \"asa\"",
              "189: frame_dig -1",
              "190: app_global_put",
              "191: retsub"
            ],
            [
              "42: int 1",
              "43: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 39 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 32 -> 34 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "218: frame_dig 6",
              "219: box_get",
              "220: assert",
              "221: extract 32 8",
              "222: byte 0x0000000000000000",
              "223: b==",
              "224: bz lock_token_bool_false@3"
            ],
            [
              "230: lock_token_bool_false@3:",
              "231: int 0"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 36 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "392: int 0",
              "393: byte \"user_locked\"",
              "394: app_global_get_ex",
              "395: assert",
              "396: extract 2 0",
              "397: frame_dig 3",
              "398: concat",
              "399: dup",
              "400: len",
              "401: int 32",
              "402: /",
              "403: itob",
              "404: extract 6 2",
              "405: swap",
              "406: concat",
              "407: byte \"user_locked\"",
              "408: swap",
              "409: app_global_put",
              "410: int 0",
              "411: byte \"total_user\"",
              "412: app_global_get_ex",
              "413: assert",
              "414: int 1",
              "415: +",
              "416: byte \"total_user\"",
              "417: swap",
              "418: app_global_put",
              "419: int 1",
              "420: itob",
              "421: frame_dig 0",
              "422: swap",
              "423: box_put"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 30 -> 38 -> 40 -> 31 -> 33 -> 35 -> 37 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "45: __puya_arc4_router___lock_token_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: txna ApplicationArgs 1",
              "52: txna ApplicationArgs 2",
              "53: btoi",
              "54: txna ApplicationArgs 3",
              "55: btoi",
              "56: txn GroupIndex",
              "57: int 1",
              "58: -",
              "59: dup",
              "60: Gtxns TypeEnum",
              "61: int axfer",
              "62: ==",
              "63: assert",
              "64: callsub lock_token"
            ],
            [
              "195: lock_token:",
              "196: proto 4 0",
              "197: int 0",
              "198: dupn 2",
              "199: txn Sender",
              "200: dup",
              "201: frame_dig -4",
              "202: dig 1",
              "203: ==",
              "204: assert",
              "205: global LatestTimestamp",
              "206: swap",
              "207: frame_dig -3",
              "208: frame_dig -2",
              "209: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "210: swap",
              "211: byte \"voting_escrow_user\"",
              "212: swap",
              "213: concat",
              "214: dup",
              "215: box_len",
              "216: bury 1",
              "217: bz lock_token_bool_true@2"
            ],
            [
              "226: lock_token_bool_true@2:",
              "227: int 1",
              "228: b lock_token_bool_merge@4"
            ],
            [
              "233: lock_token_bool_merge@4:",
              "234: assert",
              "235: int 0",
              "236: byte \"asa\"",
              "237: app_global_get_ex",
              "238: assert",
              "239: assert",
              "240: frame_dig -1",
              "241: Gtxns AssetReceiver",
              "242: global CurrentApplicationAddress",
              "243: ==",
              "244: assert",
              "245: frame_dig -1",
              "246: Gtxns Sender",
              "247: frame_dig 3",
              "248: dup",
              "249: cover 2",
              "250: ==",
              "251: assert",
              "252: frame_dig -1",
              "253: Gtxns AssetSender",
              "254: dig 1",
              "255: ==",
              "256: assert",
              "257: frame_dig -1",
              "258: Gtxns XferAsset",
              "259: int 0",
              "260: byte \"asa\"",
              "261: app_global_get_ex",
              "262: assert",
              "263: ==",
              "264: assert",
              "265: frame_dig -1",
              "266: Gtxns AssetAmount",
              "267: frame_dig -3",
              "268: ==",
              "269: assert",
              "270: int 0",
              "271: byte \"MAX_LOCK_TIME_SECONDS\"",
              "272: app_global_get_ex",
              "273: assert",
              "274: frame_dig -2",
              "275: >=",
              "276: assert",
              "277: int 0",
              "278: byte \"MIN_LOCK_TIME_SECONDS\"",
              "279: app_global_get_ex",
              "280: assert",
              "281: frame_dig -2",
              "282: <=",
              "283: assert",
              "284: frame_dig 5",
              "285: dup",
              "286: cover 2",
              "287: byte 0x",
              "288: b>",
              "289: assert",
              "290: dup",
              "291: byte 0x0000000000000000",
              "292: concat",
              "293: byte 0x0000000000000000",
              "294: concat",
              "295: byte 0x0000000000000000",
              "296: concat",
              "297: byte 0x0000000000000000",
              "298: concat",
              "299: byte 0x0000000000000000",
              "300: concat",
              "301: frame_dig 6",
              "302: dup",
              "303: uncover 2",
              "304: box_put",
              "305: frame_dig -3",
              "306: itob",
              "307: dup",
              "308: cover 2",
              "309: frame_bury 1",
              "310: dup",
              "311: box_get",
              "312: assert",
              "313: uncover 2",
              "314: replace2 32",
              "315: dig 1",
              "316: swap",
              "317: box_put",
              "318: frame_dig 4",
              "319: itob",
              "320: swap",
              "321: dup",
              "322: box_get",
              "323: assert",
              "324: dig 2",
              "325: replace2 40",
              "326: dig 1",
              "327: swap",
              "328: box_put",
              "329: frame_dig -2",
              "330: itob",
              "331: dup",
              "332: cover 2",
              "333: frame_bury 2",
              "334: dup",
              "335: box_get",
              "336: assert",
              "337: uncover 2",
              "338: replace2 48",
              "339: dig 1",
              "340: swap",
              "341: box_put",
              "342: dig 3",
              "343: len",
              "344: int 8",
              "345: <=",
              "346: assert",
              "347: int 8",
              "348: bzero",
              "349: dig 1",
              "350: box_get",
              "351: assert",
              "352: dig 5",
              "353: uncover 2",
              "354: b|",
              "355: replace2 56",
              "356: dig 1",
              "357: swap",
              "358: box_put",
              "359: dup",
              "360: box_get",
              "361: assert",
              "362: uncover 2",
              "363: replace2 64",
              "364: box_put",
              "365: int 0",
              "366: byte \"total_locked\"",
              "367: app_global_get_ex",
              "368: assert",
              "369: frame_dig -3",
              "370: +",
              "371: byte \"total_locked\"",
              "372: swap",
              "373: app_global_put",
              "374: int 0",
              "375: byte \"total_vetoken\"",
              "376: app_global_get_ex",
              "377: assert",
              "378: uncover 2",
              "379: btoi",
              "380: +",
              "381: byte \"total_vetoken\"",
              "382: swap",
              "383: app_global_put",
              "384: byte \"locked_user\"",
              "385: swap",
              "386: concat",
              "387: dup",
              "388: frame_bury 0",
              "389: box_len",
              "390: bury 1",
              "391: bnz lock_token_after_if_else@6"
            ],
            [
              "425: lock_token_after_if_else@6:",
              "426: frame_dig 3",
              "427: frame_dig 1",
              "428: concat",
              "429: frame_dig 2",
              "430: concat",
              "431: method LockEvent(address,uint64,uint64)",
              "432: swap",
              "433: concat",
              "434: log",
              "435: retsub"
            ],
            [
              "65: int 1",
              "66: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 41 -> 43 -> 42 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "68: __puya_arc4_router___claim_token_route@4:",
              "69: txn OnCompletion",
              "70: !",
              "71: assert",
              "72: txn ApplicationID",
              "73: assert",
              "74: callsub claim_token"
            ],
            [
              "468: claim_token:",
              "469: proto 0 0",
              "470: txn Sender",
              "471: byte \"voting_escrow_user\"",
              "472: dig 1",
              "473: concat",
              "474: dup",
              "475: box_len",
              "476: bury 1",
              "477: assert",
              "478: dup",
              "479: box_get",
              "480: assert",
              "481: extract 40 8",
              "482: btoi",
              "483: swap",
              "484: dup",
              "485: box_get",
              "486: assert",
              "487: extract 48 8",
              "488: btoi",
              "489: uncover 2",
              "490: swap",
              "491: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "492: pop",
              "493: dup",
              "494: box_get",
              "495: assert",
              "496: extract 32 8",
              "497: swap",
              "498: dup",
              "499: box_get",
              "500: assert",
              "501: extract 32 8",
              "502: byte 0x0000000000000000",
              "503: b>",
              "504: assert",
              "505: dig 1",
              "506: byte 0x0000000000000000",
              "507: b>",
              "508: assert",
              "509: int 0",
              "510: byte \"total_locked\"",
              "511: app_global_get_ex",
              "512: assert",
              "513: dig 2",
              "514: btoi",
              "515: dup",
              "516: cover 2",
              "517: >=",
              "518: assert",
              "519: int 0",
              "520: byte \"total_locked\"",
              "521: app_global_get_ex",
              "522: assert",
              "523: dig 1",
              "524: -",
              "525: byte \"total_locked\"",
              "526: swap",
              "527: app_global_put",
              "528: dig 1",
              "529: box_get",
              "530: assert",
              "531: byte 0x0000000000000000",
              "532: replace2 32",
              "533: dig 2",
              "534: swap",
              "535: box_put",
              "536: dig 1",
              "537: box_get",
              "538: assert",
              "539: byte 0x0000000000000000",
              "540: replace2 40",
              "541: dig 2",
              "542: swap",
              "543: box_put",
              "544: dig 1",
              "545: box_get",
              "546: assert",
              "547: byte 0x0000000000000000",
              "548: replace2 48",
              "549: dig 2",
              "550: swap",
              "551: box_put",
              "552: dig 1",
              "553: box_get",
              "554: assert",
              "555: byte 0x0000000000000000",
              "556: replace2 64",
              "557: uncover 2",
              "558: swap",
              "559: box_put",
              "560: itxn_begin",
              "561: int 0",
              "562: byte \"asa\"",
              "563: app_global_get_ex",
              "564: assert",
              "565: dig 3",
              "566: itxn_field AssetReceiver",
              "567: itxn_field XferAsset",
              "568: itxn_field AssetAmount",
              "569: int axfer",
              "570: itxn_field TypeEnum",
              "571: int 0",
              "572: itxn_field Fee",
              "573: itxn_submit",
              "574: concat",
              "575: method ClaimEvent(address,uint64)",
              "576: swap",
              "577: concat",
              "578: log",
              "579: retsub"
            ],
            [
              "75: int 1",
              "76: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 14 -> 44 -> 43 -> 45 -> 47 -> 43 -> 48 -> 54 -> 46 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "78: __puya_arc4_router___extend_lock_route@5:",
              "79: txn OnCompletion",
              "80: !",
              "81: assert",
              "82: txn ApplicationID",
              "83: assert",
              "84: txna ApplicationArgs 1",
              "85: btoi",
              "86: callsub extend_lock"
            ],
            [
              "592: extend_lock:",
              "593: proto 1 0",
              "594: txn Sender",
              "595: byte \"voting_escrow_user\"",
              "596: dig 1",
              "597: concat",
              "598: dup",
              "599: box_len",
              "600: bury 1",
              "601: assert",
              "602: dup",
              "603: box_get",
              "604: assert",
              "605: extract 40 8",
              "606: btoi",
              "607: swap",
              "608: dup",
              "609: box_get",
              "610: assert",
              "611: extract 48 8",
              "612: btoi",
              "613: uncover 2",
              "614: swap",
              "615: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "616: swap",
              "617: global LatestTimestamp",
              "618: dig 1",
              "619: box_get",
              "620: assert",
              "621: extract 32 8",
              "622: byte 0x0000000000000000",
              "623: b>",
              "624: assert",
              "625: uncover 2",
              "626: <",
              "627: assert",
              "628: dup",
              "629: box_get",
              "630: assert",
              "631: extract 48 8",
              "632: frame_dig -1",
              "633: itob",
              "634: dup",
              "635: cover 2",
              "636: b<",
              "637: assert",
              "638: dig 1",
              "639: box_get",
              "640: assert",
              "641: dig 1",
              "642: replace2 48",
              "643: dig 2",
              "644: swap",
              "645: box_put",
              "646: swap",
              "647: box_get",
              "648: assert",
              "649: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "650: pop",
              "651: concat",
              "652: method ExtendLockEvent(address,uint64)",
              "653: swap",
              "654: concat",
              "655: log",
              "656: retsub"
            ],
            [
              "87: int 1",
              "88: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 16 -> 55 -> 43 -> 56 -> 47 -> 43 -> 48 -> 54 -> 57 -> 17 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "90: __puya_arc4_router___extend_amount_route@6:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: txna ApplicationArgs 1",
              "97: btoi",
              "98: callsub extend_amount"
            ],
            [
              "764: extend_amount:",
              "765: proto 1 0",
              "766: txn Sender",
              "767: byte \"voting_escrow_user\"",
              "768: dig 1",
              "769: concat",
              "770: dup",
              "771: box_len",
              "772: bury 1",
              "773: assert",
              "774: dup",
              "775: box_get",
              "776: assert",
              "777: extract 40 8",
              "778: btoi",
              "779: swap",
              "780: dup",
              "781: box_get",
              "782: assert",
              "783: extract 48 8",
              "784: btoi",
              "785: uncover 2",
              "786: swap",
              "787: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "788: swap",
              "789: global LatestTimestamp",
              "790: frame_dig -1",
              "791: assert",
              "792: dig 1",
              "793: box_get",
              "794: assert",
              "795: extract 32 8",
              "796: byte 0x0000000000000000",
              "797: b>",
              "798: assert",
              "799: uncover 2",
              "800: <",
              "801: assert",
              "802: dup",
              "803: box_get",
              "804: assert",
              "805: extract 32 8",
              "806: btoi",
              "807: frame_dig -1",
              "808: +",
              "809: itob",
              "810: dig 1",
              "811: box_get",
              "812: assert",
              "813: swap",
              "814: replace2 32",
              "815: dig 1",
              "816: swap",
              "817: box_put",
              "818: box_get",
              "819: assert",
              "820: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "821: pop",
              "822: frame_dig -1",
              "823: itob",
              "824: concat",
              "825: method ExtendAmountEvent(address,uint64)",
              "826: swap",
              "827: concat",
              "828: log",
              "829: retsub"
            ],
            [
              "99: int 1",
              "100: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 50 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "701: frame_dig -1",
              "702: byte 0x0000000000000000",
              "703: replace2 56",
              "704: frame_bury -1",
              "705: b _update_vetoken_data_after_if_else@4"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 39 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "450: byte 0x",
              "451: swap",
              "452: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 49 -> 51 -> 38 -> 40 -> 52 -> 53 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "686: int 0",
              "687: byte \"total_vetoken\"",
              "688: app_global_get_ex",
              "689: assert",
              "690: frame_dig -1",
              "691: extract 56 8",
              "692: btoi",
              "693: -",
              "694: byte \"total_vetoken\"",
              "695: swap",
              "696: app_global_put",
              "697: frame_dig 0",
              "698: frame_dig 1",
              "699: >",
              "700: bz _update_vetoken_data_else_body@3"
            ],
            [
              "707: _update_vetoken_data_else_body@3:",
              "708: frame_dig -1",
              "709: extract 32 8",
              "710: btoi",
              "711: frame_dig 2",
              "712: callsub _calculate_vetoken_amount"
            ],
            [
              "439: _calculate_vetoken_amount:",
              "440: proto 2 1",
              "441: frame_dig -2",
              "442: itob",
              "443: frame_dig -1",
              "444: itob",
              "445: b*",
              "446: dup",
              "447: byte 0x",
              "448: b==",
              "449: bz _calculate_vetoken_amount_after_if_else@2"
            ],
            [
              "454: _calculate_vetoken_amount_after_if_else@2:",
              "455: int 0",
              "456: byte \"SECONDS_PER_YEAR\"",
              "457: app_global_get_ex",
              "458: assert",
              "459: itob",
              "460: frame_dig 0",
              "461: swap",
              "462: b/",
              "463: swap",
              "464: retsub"
            ],
            [
              "713: dup",
              "714: len",
              "715: int 8",
              "716: <=",
              "717: assert",
              "718: int 8",
              "719: bzero",
              "720: b|",
              "721: frame_dig -1",
              "722: swap",
              "723: replace2 56",
              "724: frame_bury -1",
              "725: int 0",
              "726: byte \"total_vetoken\"",
              "727: app_global_get_ex",
              "728: assert",
              "729: frame_dig -1",
              "730: extract 56 8",
              "731: btoi",
              "732: +",
              "733: byte \"total_vetoken\"",
              "734: swap",
              "735: app_global_put"
            ],
            [
              "737: _update_vetoken_data_after_if_else@4:",
              "738: frame_dig 0",
              "739: itob",
              "740: frame_dig -1",
              "741: swap",
              "742: replace2 64",
              "743: dup",
              "744: frame_bury -1",
              "745: frame_bury 3"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 18 -> 58 -> 47 -> 43 -> 48 -> 54 -> 59 -> 19 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "102: __puya_arc4_router___update_vetoken_data_route@7:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub update_vetoken_data"
            ],
            [
              "833: update_vetoken_data:",
              "834: proto 0 0",
              "835: byte \"voting_escrow_user\"",
              "836: txn Sender",
              "837: concat",
              "838: dup",
              "839: box_len",
              "840: bury 1",
              "841: assert",
              "842: box_get",
              "843: assert",
              "844: callsub _update_vetoken_data"
            ],
            [
              "660: _update_vetoken_data:",
              "661: proto 1 1",
              "662: global LatestTimestamp",
              "663: dup",
              "664: frame_dig -1",
              "665: extract 64 8",
              "666: btoi",
              "667: dig 1",
              "668: swap",
              "669: -",
              "670: swap",
              "671: frame_dig -1",
              "672: extract 40 8",
              "673: btoi",
              "674: frame_dig -1",
              "675: extract 48 8",
              "676: btoi",
              "677: callsub get_lock_end_time"
            ],
            [
              "583: get_lock_end_time:",
              "584: proto 2 1",
              "585: frame_dig -2",
              "586: frame_dig -1",
              "587: +",
              "588: retsub"
            ],
            [
              "678: dup",
              "679: cover 3",
              "680: swap",
              "681: -",
              "682: swap",
              "683: frame_dig -1",
              "684: swap",
              "685: bz _update_vetoken_data_after_if_else@5"
            ],
            [
              "747: _update_vetoken_data_after_if_else@5:",
              "748: frame_dig 3",
              "749: dup",
              "750: frame_bury -1",
              "751: extract 0 32",
              "752: frame_dig -1",
              "753: concat",
              "754: method UpdateDataEvent(address,(address,uint64,uint64,uint64,uint64,uint64))",
              "755: swap",
              "756: concat",
              "757: log",
              "758: frame_dig -1",
              "759: frame_bury 0",
              "760: retsub"
            ],
            [
              "845: pop",
              "846: retsub"
            ],
            [
              "109: int 1",
              "110: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 20 -> 60 -> 21 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "112: __puya_arc4_router___users_locked_route@8:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub users_locked"
            ],
            [
              "850: users_locked:",
              "851: proto 0 1",
              "852: int 0",
              "853: byte \"user_locked\"",
              "854: app_global_get_ex",
              "855: assert",
              "856: retsub"
            ],
            [
              "119: byte 0x151f7c75",
              "120: swap",
              "121: concat",
              "122: log",
              "123: int 1",
              "124: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 22 -> 61 -> 23 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "126: __puya_arc4_router___is_locked_ever_route@9:",
              "127: txn OnCompletion",
              "128: !",
              "129: assert",
              "130: txn ApplicationID",
              "131: assert",
              "132: txna ApplicationArgs 1",
              "133: callsub is_locked_ever"
            ],
            [
              "860: is_locked_ever:",
              "861: proto 1 1",
              "862: byte \"locked_user\"",
              "863: frame_dig -1",
              "864: concat",
              "865: box_get",
              "866: swap",
              "867: btoi",
              "868: swap",
              "869: assert",
              "870: retsub"
            ],
            [
              "134: byte 0x00",
              "135: int 0",
              "136: uncover 2",
              "137: setbit",
              "138: byte 0x151f7c75",
              "139: swap",
              "140: concat",
              "141: log",
              "142: int 1",
              "143: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 24 -> 62 -> 63 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "883: int 0",
              "884: swap",
              "885: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 24 -> 62 -> 64 -> 25 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "18: method initialize(asset)void",
              "19: method lock_token(address,uint64,uint64,axfer)void",
              "20: method claim_token()void",
              "21: method extend_lock(uint64)void",
              "22: method extend_amount(uint64)void",
              "23: method update_vetoken_data()void",
              "24: method users_locked()address[]",
              "25: method is_locked_ever(address)bool",
              "26: method balance_of(address)uint64",
              "27: txna ApplicationArgs 0",
              "28: match __puya_arc4_router___initialize_route@2 __puya_arc4_router___lock_token_route@3 __puya_arc4_router___claim_token_route@4 __puya_arc4_router___extend_lock_route@5 __puya_arc4_router___extend_amount_route@6 __puya_arc4_router___update_vetoken_data_route@7 __puya_arc4_router___users_locked_route@8 __puya_arc4_router___is_locked_ever_route@9 __puya_arc4_router___balance_of_route@10"
            ],
            [
              "145: __puya_arc4_router___balance_of_route@10:",
              "146: txn OnCompletion",
              "147: !",
              "148: assert",
              "149: txn ApplicationID",
              "150: assert",
              "151: txna ApplicationArgs 1",
              "152: callsub balance_of"
            ],
            [
              "874: balance_of:",
              "875: proto 1 1",
              "876: byte \"voting_escrow_user\"",
              "877: frame_dig -1",
              "878: concat",
              "879: dup",
              "880: box_len",
              "881: bury 1",
              "882: bnz balance_of_after_if_else@2"
            ],
            [
              "887: balance_of_after_if_else@2:",
              "888: frame_dig 0",
              "889: box_get",
              "890: assert",
              "891: extract 56 8",
              "892: btoi",
              "893: swap",
              "894: retsub"
            ],
            [
              "153: itob",
              "154: byte 0x151f7c75",
              "155: swap",
              "156: concat",
              "157: log",
              "158: int 1",
              "159: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 26 -> 27 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "164: txn ApplicationID",
              "165: !",
              "166: assert",
              "167: int 1",
              "168: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 26 -> 28 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.lock_contract.contract.VotingEscrow.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "15: proto 0 1",
              "16: txn NumAppArgs",
              "17: bz __puya_arc4_router___bare_routing@13"
            ],
            [
              "161: __puya_arc4_router___bare_routing@13:",
              "162: txn OnCompletion",
              "163: bnz __puya_arc4_router___after_if_else@17"
            ],
            [
              "170: __puya_arc4_router___after_if_else@17:",
              "171: int 0",
              "172: retsub"
            ],
            [
              "10: return"
            ]
          ]
        }
      ]
    }
  ]
}